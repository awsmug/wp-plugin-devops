#!/bin/bash

# Setting up directory variables
export SCRIPT_PATH=$(pwd)
RELATIVE_LINK_DIR="$(dirname "$(readlink "$0")")"
VENDOR_BIN_DIR="`dirname \"$0\"`"              # relative
VENDOR_BIN_DIR="`( cd \"$VENDOR_BIN_DIR\" && pwd )`"  # absolutized and normalized
export BIN_DIR="`( cd \"$VENDOR_BIN_DIR\" && cd \"$RELATIVE_LINK_DIR\" && pwd )`/docker"
export DEVOPS_PATH=$(dirname $(dirname $BIN_DIR))
export SERVER_HOST="localhost"
export SERVER_IP="10.221.50.1"

if [ -f vendor/awsmug/wp-plugin-devops/bin/docker/nginx/default.conf ]; then
    NGINX_CONF=vendor/awsmug/wp-plugin-devops/bin/docker/nginx/default.conf
else
    NGINX_CONF=bin/docker/nginx/default.conf
fi

# Setting up docker variables
CONTAINER_PREFIX=$(basename ${SCRIPT_PATH})
CONTAINER_PREFIX=${CONTAINER_PREFIX// /}
export CONTAINER_PREFIX=${CONTAINER_PREFIX//-/}_
export WP_CONTAINER_NAME="${CONTAINER_PREFIX}wp_1"

# Setting up WP variables
export PLUGIN_PATH=$SCRIPT_PATH
export PLUGIN_SLUG=$(basename $PLUGIN_PATH)
export DOCKER_COMPOSE_FILE="${PLUGIN_PATH}/docker-compose.yml"
export REMOTE_PLUGIN_PATH=${PLUGIN_PATH}/wordpress/wp-content/plugins/

function add_to_gitignore {
    echo "###" >> $1
    echo "# Automatinc added files from WP Plugin Devops" >> $1
    echo "###" >> $1
    echo "composer.lock" >> $1
    echo "test" >> $1
    echo "webserver" >> $1
    echo "vendor" >> $1
    echo "wordpress" >> $1
}

# Copy Docker Compose file to plugin dir if not existing
if [ ! -f $DOCKER_COMPOSE_FILE ]; then
    GITIGNORE_FILE="${PLUGIN_PATH}/.gitignore"

    echo "This seems to be the first start of the WP Plugin Devops in this directory."

    if [ -f $GITIGNORE_FILE ]; then
        read -p ".gitignore file exists would you like to add not necessary files to it (y/n): " add_gitignore

        if [ "y" = $add_gitignore ]; then
            add_to_gitignore $GITIGNORE_FILE
        elif [ "n" = $add_gitignore ]; then
            echo "No files added to .gitignore."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    else
        read -p ".gitignore file not found. Would you like to create one and add not necessary files to it (y/n): " add_gitignore

        if [ "y" = $add_gitignore ]; then
            add_to_gitignore $GITIGNORE_FILE
        elif [ "n" = $add_gitignore ]; then
            echo "No files added to .gitignore."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    fi

    read -p "Create a main plugin file? (y/n) " add_plugin_file

    if [ "y" = $add_plugin_file ]; then
        cp ${DEVOPS_PATH}/plugin.php ${PLUGIN_PATH}/plugin.php
        echo "plugin.php added."
    elif [ "n" = $add_plugin_file ]; then
        echo "No Plugin file added."
    else
        echo "Please answer with (y) or (n). Installation interrupted."
        exit 1;
    fi

    TEST_PATH=${PLUGIN_PATH}/tests

    if [ ! -d $TEST_PATH ]; then
        read -p "Create test files for PHPUnit? (y/n) " add_test_files

        if [ "y" = $add_test_files ]; then
            mkdir -p $TEST_PATH
            cp -R ${DEVOPS_PATH}/phpunit.xml ${PLUGIN_PATH}/phpunit.xml
            cp -R ${DEVOPS_PATH}/tests/phpunit/. $TEST_PATH/phpunit/
            echo "PHPUnit est files added."
        elif [ "n" = $add_test_files ]; then
            echo "No test files added."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi

        read -p "Create test files for behat? (y/n) " add_test_files

        if [ "y" = $add_test_files ]; then
            mkdir -p $TEST_PATH
            cp -R ${DEVOPS_PATH}/behat.yml ${PLUGIN_PATH}/behat.yml
            cp -R ${DEVOPS_PATH}/tests/behat/. $TEST_PATH/behat/
            echo "behat test files added."
        elif [ "n" = $add_test_files ]; then
            echo "No test files added."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    fi

    TRAVIS_FILE=${PLUGIN_PATH}/.travis.yml

    if [ ! -d $TRAVIS_FILE ]; then
        read -p "Create a travis file? (y/n) " add_travis_files

        if [ "y" = $add_travis_files ]; then
            cp -R ${DEVOPS_PATH}/.travis.yml ${PLUGIN_PATH}/.travis.yml
            echo "Test files added."
        elif [ "n" = $add_travis_files ]; then
            echo "No test files added."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    fi

    echo "Copy docker compose file..."
    sed 's/.\/bin\/docker\/nginx\/default.conf/.\/vendor\/awsmug\/wp-plugin-devops\/bin\/docker\/nginx\/default.conf/' ${DEVOPS_PATH}/docker-compose.yml > ${DOCKER_COMPOSE_FILE}
fi

# Running command
if [ "$1" = "start" ]; then
    if [ ! -z "$2" ]; then
        export SERVER_HOST=$2
    fi

    if [ -f ${DOCKER_COMPOSE_FILE}-e ]; then
        rm ${DOCKER_COMPOSE_FILE}
        mv ${DOCKER_COMPOSE_FILE}-e ${DOCKER_COMPOSE_FILE}
    fi

    if [ -f ${NGINX_CONF}-e ]; then
        rm ${NGINX_CONF}
        mv ${NGINX_CONF}-e ${NGINX_CONF}
    fi

    sed -i -e s/wordpress.dev/${SERVER_HOST}/g ${DOCKER_COMPOSE_FILE} \
        -i -e s/999.999.999.999/${SERVER_IP}/g ${DOCKER_COMPOSE_FILE}

    sed -i -e s/wordpress.dev/${SERVER_HOST}/g ${NGINX_CONF}

    $BIN_DIR/start.sh

elif [ "$1" = "stop" ]; then
    $BIN_DIR/stop.sh

elif [ "$1" = "test" ]; then
    $BIN_DIR/test.sh $2

elif [ "$1" = "sync" ]; then
    $BIN_DIR/sync.sh

elif [ "$1" = "clean" ]; then
    $BIN_DIR/clean.sh

else
    echo "Usage: $(basename $0) <start [hostname]|stop|test|clean>"
    exit 1
fi