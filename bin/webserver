#!/bin/sh

# Setting up directory variables
export SCRIPT_PATH=$(pwd)
RELATIVE_LINK_DIR="$(dirname "$(readlink "$0")")"
VENDOR_BIN_DIR="`dirname \"$0\"`"              # relative
VENDOR_BIN_DIR="`( cd \"$VENDOR_BIN_DIR\" && pwd )`"  # absolutized and normalized
export BIN_PATH="`( cd \"$VENDOR_BIN_DIR\" && cd \"$RELATIVE_LINK_DIR\" && pwd )`/docker"
export DEVOPS_PATH=$(dirname $(dirname $BIN_PATH))

# Setting up docker variables
CONTAINER_PREFIX=$(basename ${SCRIPT_PATH})
CONTAINER_PREFIX=${CONTAINER_PREFIX// /}
export CONTAINER_PREFIX=${CONTAINER_PREFIX//-/}_
export WP_CONTAINER_NAME="${CONTAINER_PREFIX}wp_1"

# Setting up WP variables
export PLUGIN_PATH=$SCRIPT_PATH
export PLUGIN_SLUG=$(basename $PLUGIN_PATH)
export DOCKER_COMPOSE_FILE="${PLUGIN_PATH}/docker-compose.yml"

function add_to_gitignore {
    echo "###" >> $1
    echo "# Automatinc added files from WP Plugin Devops" >> $1
    echo "###" >> $1
    echo "composer.lock" >> $1
    echo "test" >> $1
    echo "webserver" >> $1
    echo "vendor" >> $1
    echo "wordpress" >> $1
}

# Copy Docker Compose file to plugin dir if not existing
if [ ! -f $DOCKER_COMPOSE_FILE ]; then
    GITIGNORE_FILE="${PLUGIN_PATH}/.gitignore"

    if [ -f $GITIGNORE_FILE ]; then
        read -p ".gitignore file exists would you like to add not necessary files to it (y/n): " add_gitignore

        if [ "y" = $add_gitignore ]; then
            add_to_gitignore $GITIGNORE_FILE
        elif [ "n" = $add_gitignore ]; then
            echo "No files added to .gitignore."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    else
        read -p ".gitignore file not found. Would you like to create one and add not necessary files to it (y/n): " add_gitignore

        if [ "y" = $add_gitignore ]; then
            add_to_gitignore $GITIGNORE_FILE
        elif [ "n" = $add_gitignore ]; then
            echo "No files added to .gitignore."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    fi

    read -p "This seems to be the first start of the WP Plugin Devops in this directory. Create a main plugin file? (y/n) " add_plugin_file

    if [ "y" = $add_plugin_file ]; then
        cp ${DEVOPS_PATH}/plugin.php ${PLUGIN_PATH}/plugin.php
        echo "plugin.php added."
    elif [ "n" = $add_plugin_file ]; then
        echo "No Plugin file added."
    else
        echo "Please answer with (y) or (n). Installation interrupted."
        exit 1;
    fi

    read -p "This seems to be the first start of the WP Plugin Devops in this directory. Create a test files for phpunit and behat? (y/n) " add_test_files

    TEST_PATH=${PLUGIN_PATH}/tests

    if [ ! -d $TEST_PATH ]; then
        if [ "y" = $add_test_files ]; then
            mkdir -p $TEST_PATH
            cp -R ${DEVOPS_PATH}/tests/. $TEST_PATH
            echo "Test files added."
        elif [ "n" = $add_test_files ]; then
            echo "No test files added."
        else
            echo "Please answer with (y) or (n). Installation interrupted."
            exit 1;
        fi
    fi

    echo "Copy Docker compose file..."
    cp ${DEVOPS_PATH}/docker-compose.yml ${DOCKER_COMPOSE_FILE}
fi

if [ "$1" = "start" ]; then
    $BIN_PATH/start.sh

elif [ "$1" = "stop" ]; then
    $BIN_PATH/stop.sh

elif [ "$1" = "clean" ]; then
    $BIN_PATH/clean.sh

else
    echo "Usage: $(basename $0) <start|stop|clean>"
    exit 1
fi